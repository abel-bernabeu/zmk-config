#define CONFIG_WIRELESS

#define ZMK_BASE_LAYER(name, LT, RT, LM, RM, LB, RB, LH, RH)                   \
    ZMK_LAYER(                                                                 \
        name,                                                                  \
                 LT RT                                                         \
                 LM RM                                                         \
                 LB RB                                                         \
        &kp LGUI LH RH &smart_mouse                                            \
    )

#include "zmk-helpers/key-labels/36.h"
#include "base.keymap"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,physical-layout = &foostan_corne_5col_layout; };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-toggle-layer";
            label = "NEW_BEHAVIOR";
            #binding-cells = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E      &kp R             &kp T           &kp Y      &kp U              &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D      &kp F             &kp G           &kp H      &kp J              &kp K      &kp L    &kp SEMI  &kp RET
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V             &kp B           &kp N      &kp M              &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LCTRL  &kp LEFT_COMMAND  &kp LEFT_ALT    &kp SPACE  &kp RIGHT_COMMAND  &kp LCTRL
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        switch {
            if-layers = <0>;
            then-layer = <1>;
        };

        back {
            if-layers = <1>;
            then-layer = <0>;
        };
    };
};
